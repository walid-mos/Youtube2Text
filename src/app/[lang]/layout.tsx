import '@/styles/globals.css'
import { Inter } from 'next/font/google'

import Analytics from '@/components/misc/Analytics'
import { LOCALES, LOCALES_TYPE } from '@/utils/constants'
import { cn } from '@/utils/classnames'

import Header from './_components/Header'
import Footer from './_components/Footer'
import Providers from './providers'
import { getNavigationLinks } from './controller'

const inter = Inter({ subsets: ['latin'] })

if (!process.env.NEXT_PUBLIC_SUPABASE_URL || !process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY) {
	throw new Error('Missing Supabase ENV variables')
}

type Props = {
	children: React.ReactNode
	params: {
		lang: LOCALES_TYPE
	}
}

export const metadata = {
	title: 'Create Next App',
	description: 'Generated by create next app',
}

export const generateStaticParams = async () => [LOCALES.map(locale => ({ lang: locale }))]

const RootLayout = async ({ children, params: { lang } }: Props) => {
	if (!LOCALES.some(l => l === lang)) {
		throw new Error(`Unsupported locale: ${lang}`)
	}

	return (
		<html lang={lang} className={cn(inter.className, 'light')}>
			<head />
			<Analytics />
			<body className="bg-slate-50/40 dark:bg-zinc-800">
				<Providers>
					<div className="flex flex-col justify-between min-h-screen p-6 mx-auto md:p-12 max-w-7xl">
						<header className="backdrop-blur bh-zinc-900/50">
							<Header navigation={await getNavigationLinks(lang)} />
						</header>
						<main className="gap-8 my-8 md:gap-16 md:my-14 lg:my-20">{children}</main>
						<footer className="border-t inset-2x-0 border-zinc-500/10 dark:border-zinc-200">
							<Footer lang={lang} />
						</footer>
					</div>
				</Providers>
			</body>
		</html>
	)
}
export default RootLayout
